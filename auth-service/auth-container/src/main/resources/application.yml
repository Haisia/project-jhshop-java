server:
  port: 9001

# === common.start ===

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${server.port}}
    hostname: localhost

feign:
  secret:
    key: ${FEIGN_SECRET_KEY}

saga:
  compensate:
    scheduler:
      fixed-delay-string: ${SAGA_COMPENSATE_SCHEDULER_FIXED_DELAY}
      initial-delay-string: ${SAGA_COMPENSATE_SCHEDULER_INITIAL_DELAY}

# === common.end ===

spring:
  application:
    name: auth-service
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB_AUTH}
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        show_sql: true
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
      timeout: 5000ms

jwt:
  refresh-token:
    key: ${JWT_REFRESH_TOKEN_KEY}
    expiration-ms: 604800000
  access-token:
    key: ${JWT_ACCESS_TOKEN_KEY}
#    expiration-ms: 300000
    expiration-ms: 604800000
